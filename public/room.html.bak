<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Werewolf - Room</title>
  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <style>body{font-family:system-ui, Arial;padding:12px;}</style>
</head>
<body>
  <h2>Room <span id="code"></span></h2>
  <div>
    <div id="players"></div>
    <div>
      <input id="msg" placeholder="message" />
      <button id="send">Send</button>
    </div>
    <div id="chat"></div>
  </div>

  <script>
    const socket = io();
    const code = new URLSearchParams(location.search).get('code');
    document.getElementById('code').textContent = code;
    let me = null;

    async function devGetMe() {
      // Quick dev: fetch first user in memory by creating a quick auth using prompt
      const email = prompt('Enter your email used in lobby (dev mode)');
      if (!email) return alert('need email');
      const res = await fetch('/api/auth/google', { method:'POST', body: JSON.stringify({ email, name: email.split('@')[0] }), headers:{'Content-Type':'application/json'} });
      const j = await res.json();
      me = j.user;
      socket.emit('auth', { userId: me.id }, (r) => {});
      join();
    }

    async function join(){
      socket.emit('room:join', { code }, (r) => {
        if (r?.ok) renderRoom(r.room);
        else alert(JSON.stringify(r));
      });
    }

    socket.on('room:update', (payload) => { renderRoom(payload.room); });
    socket.on('chat:message', m => {
      const c = document.getElementById('chat');
      const el = document.createElement('div'); el.textContent = `${m.userName}: ${m.text}`; c.appendChild(el);
    });

    function renderRoom(room){
      const p = document.getElementById('players');
      p.innerHTML = '<h4>Players</h4>' + room.players.map(x=>`<div>${x.number}. ${x.name} ${x.isdead?'(dead)':''}</div>`).join('');
    }

    document.getElementById('send').onclick = () => {
      const text = document.getElementById('msg').value;
      socket.emit('chat:message', { code, text }, (r) => { if (!r.ok) alert(JSON.stringify(r)); else document.getElementById('msg').value=''; });
    }

    // flow start
    devGetMe();
  </script>
</body>
</html>